// Serverless function to securely provide the Google Maps API key
// This keeps the API key on the server side while allowing the client to load the Maps API directly

module.exports = async (req, res) => {
  // Set CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  
  // Handle OPTIONS request (preflight)
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }
  
  // Only allow GET requests
  if (req.method !== 'GET') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    // Get API key from environment variable
    const apiKey = process.env.GOOGLE_MAPS_API_KEY;
    
    if (!apiKey) {
      return res.status(500).json({ 
        error: 'API key not configured',
        message: 'The Google Maps API key is not set in the environment variables.'
      });
    }
    
    // Return the API key in a JavaScript file that sets a global variable
    // This is still secure because:
    // 1. The API key is only valid for the deployed domain (should be restricted in Google Cloud Console)
    // 2. The serverless function can add additional security checks if needed
    // 3. The key is never stored in the repository
    const jsContent = `
    // This script is generated by the server and contains the API key
    window.GOOGLE_MAPS_CONFIG = {
      apiKey: "${apiKey}",
      timestamp: "${new Date().toISOString()}"
    };
    
    // Load the Google Maps API with the key
    function loadGoogleMapsAPI() {
      const script = document.createElement('script');
      script.src = "https://maps.googleapis.com/maps/api/js?key=" + 
                   window.GOOGLE_MAPS_CONFIG.apiKey + 
                   "&libraries=places&callback=initMap";
      script.async = true;
      script.defer = true;
      document.head.appendChild(script);
    }
    
    // Load the API once the page is ready
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
      setTimeout(loadGoogleMapsAPI, 1);
    } else {
      document.addEventListener('DOMContentLoaded', loadGoogleMapsAPI);
    }
    `;
    
    // Send the JavaScript response
    res.setHeader('Content-Type', 'application/javascript');
    res.status(200).send(jsContent);
    
  } catch (error) {
    console.error('Maps key API error:', error);
    res.status(500).json({ error: 'Server error', message: error.message });
  }
};
